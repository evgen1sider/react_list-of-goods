{"version":3,"sources":["components/GoodsList.tsx","components/StartButton.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","console","log","className","map","good","React","memo","StartButton","props","method","type","onClick","goodsFromServer","App","state","isReversed","sortBy","isListVisible","limitedLength","reverse","setState","sortAlphabetically","reset","sortByLength","renderedList","viewLimitedList","changeHandler","event","target","value","this","visibleGoods","filter","length","sort","g1","g2","localeCompare","name","onChange","item","indexOf","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAMMA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAIpC,OAFAC,QAAQC,IAAI,iBAGV,oBAAIC,UAAU,aAAd,SACGH,EAAMI,KAAI,SAACC,GAAD,OACT,oBAAeF,UAAU,kBAAzB,SACGE,GADMA,SAQFC,MAAMC,KAAKR,GCfbS,EAA+B,SAACC,GAC3C,IAAQC,EAAWD,EAAXC,OAKR,OAFAT,QAAQC,IAAI,gBAGV,wBACES,KAAK,SACLR,UAAU,0CACVS,QAASF,EAHX,oBCREG,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA+JaC,E,4MAnJbC,MAAQ,CACNf,MAAOa,EACPG,YAAY,EACZC,OAAQ,GACRC,eAAe,EACfC,cAAe,G,EAGjBC,QAAU,WACR,EAAKC,UAAS,SAAAN,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gB,EAIvBM,mBAAqB,WACnB,EAAKD,SAAS,CAAEJ,OAAQ,c,EAG1BM,MAAQ,WACN,EAAKF,SAAS,CACZJ,OAAQ,GACRD,YAAY,EACZhB,MAAOa,EACPK,eAAe,K,EAInBM,aAAe,WACb,EAAKH,SAAS,CAAEJ,OAAQ,Y,EAG1BQ,aAAe,WACb,EAAKJ,UAAS,SAAAN,GAAK,MAAK,CAAEG,eAAgBH,EAAMG,mB,EAGlDQ,gBAAkB,WAChB,EAAKL,UAAS,SAAAN,GAAK,MACjB,CACEI,cAAeJ,EAAMI,mB,EAK3BQ,cAAgB,SAACC,GACf,IAAMC,EAASD,EAAMC,OAAOC,MAG5B7B,QAAQC,IAAI2B,GAEZ,EAAKR,SAAS,CAAEF,eAAgBU,K,4CAGlC,WACE,MAMIE,KAAKhB,MALPf,EADF,EACEA,MACAgB,EAFF,EAEEA,WACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,cACAC,EALF,EAKEA,cAIFlB,QAAQC,IAAI,OAEZ,IAAM8B,EAAe,YAAIhC,GAAOiC,QAAO,SAAA5B,GAAI,OACzCA,EAAK6B,QAAUf,KAkBjB,OAfAa,EAAaG,MAAK,SAACC,EAAIC,GACrB,OAAQpB,GACN,IAAK,SACH,OAAOmB,EAAGF,OAASG,EAAGH,OACxB,IAAK,WACH,OAAOE,EAAGE,cAAcD,GAC1B,QACE,OAAO,MAITrB,GACFgB,EAAaZ,UAIb,qBAAKjB,UAAU,uDAAf,SACE,gCACE,wCACEe,GAAiB,cAAC,EAAD,CAAaR,OAAQqB,KAAKN,eAE5CP,GACC,iCACE,wBACEP,KAAK,SACLR,UAAU,4BACVS,QAASmB,KAAKX,QAHhB,qBAOA,wBACET,KAAK,SACLR,UAAU,4BACVS,QAASmB,KAAKT,mBAHhB,iCAQA,wBACEX,KAAK,SACLR,UAAU,4BACVS,QAASmB,KAAKP,aAHhB,4BAOA,wBACEb,KAAK,SACLR,UAAU,yBACVS,QAASmB,KAAKR,MAHhB,sBAUHL,GAAiB,cAAC,EAAD,CAAWlB,MAAOgC,IAEnCd,GACC,wBACEqB,KAAK,cACLpC,UAAU,6CACVqC,SAAUT,KAAKJ,cAHjB,SAKG3B,EAAMI,KAAI,SAAAqC,GAAI,OACb,wBACEX,MAAO9B,EAAM0C,QAAQD,GAAQ,EAD/B,SAIGzC,EAAM0C,QAAQD,GAAQ,GAFlBA,iB,GAvILnC,IAAMqC,eCvBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e32b1132.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n};\n\nconst GoodsList: React.FC<Props> = ({ goods }) => {\n  // eslint-disable-next-line no-console\n  console.log('List of goods');\n\n  return (\n    <ul className=\"list-group\">\n      {goods.map((good) => (\n        <li key={good} className=\"list-group-item\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default React.memo(GoodsList);\n","import React from 'react';\n\ntype Props = {\n  method: () => void;\n};\n\nexport const StartButton: React.FC<Props> = (props) => {\n  const { method } = props;\n\n  // eslint-disable-next-line no-console\n  console.log('Start Button');\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-lg btn-block col-12\"\n      onClick={method}\n    >\n      Start\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport GoodsList from './components/GoodsList';\nimport { StartButton } from './components/StartButton';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  isReversed: boolean;\n  sortBy: string;\n  isListVisible: boolean;\n  limitedLength: number;\n};\n\nclass App extends React.PureComponent<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isReversed: false,\n    sortBy: '',\n    isListVisible: false,\n    limitedLength: 1,\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortAlphabetically = () => {\n    this.setState({ sortBy: 'alphabet' });\n  };\n\n  reset = () => {\n    this.setState({\n      sortBy: '',\n      isReversed: false,\n      goods: goodsFromServer,\n      isListVisible: true,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  };\n\n  renderedList = () => {\n    this.setState(state => ({ isListVisible: !state.isListVisible }));\n  };\n\n  viewLimitedList = () => {\n    this.setState(state => (\n      {\n        limitedLength: state.limitedLength,\n      }\n    ));\n  };\n\n  changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = event.target.value;\n\n    // eslint-disable-next-line no-console\n    console.log(target);\n\n    this.setState({ limitedLength: +target });\n  };\n\n  render() {\n    const {\n      goods,\n      isReversed,\n      sortBy,\n      isListVisible,\n      limitedLength,\n    } = this.state;\n\n    // eslint-disable-next-line no-console\n    console.log('App');\n\n    const visibleGoods = [...goods].filter(good => (\n      good.length >= limitedLength\n    ));\n\n    visibleGoods.sort((g1, g2) => {\n      switch (sortBy) {\n        case 'length':\n          return g1.length - g2.length;\n        case 'alphabet':\n          return g1.localeCompare(g2);\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return (\n      <div className=\"App d-flex justify-content-center align-items-center\">\n        <div>\n          <h1>Goods</h1>\n          {!isListVisible && <StartButton method={this.renderedList} />}\n\n          {isListVisible && (\n            <span>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-secondary\"\n                onClick={this.reverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-secondary\"\n                onClick={this.sortAlphabetically}\n              >\n                Sort Alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-secondary\"\n                onClick={this.sortByLength}\n              >\n                Sort by length\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-outline-danger\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            </span>\n          )}\n\n          {isListVisible && <GoodsList goods={visibleGoods} />}\n\n          {isListVisible && (\n            <select\n              name=\"goodsLength\"\n              className=\"btn btn-outline-secondary btn-block col-12\"\n              onChange={this.changeHandler}\n            >\n              {goods.map(item => (\n                <option\n                  value={goods.indexOf(item) + 1}\n                  key={item}\n                >\n                  {goods.indexOf(item) + 1}\n                </option>\n              ))}\n            </select>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}