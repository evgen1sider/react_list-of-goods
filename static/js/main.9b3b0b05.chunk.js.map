{"version":3,"sources":["components/GoodsSelected.tsx","components/GoodsList.tsx","components/StartButton.tsx","App.tsx","index.tsx"],"names":["GoodsSelected","props","goods","changeHandler","name","className","onChange","value","map","item","indexOf","GoodsList","state","isReversed","limitedLength","onReverse","setState","currentState","reverse","onSort","event","id","currentTarget","sort","g1","g2","localeCompare","length","filtered","good","target","reset","this","visibleGoods","filter","type","onClick","React","Component","memo","StartButton","method","goodsFromServer","App","isListVisible","renderedList","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"mPAOaA,EAAiC,SAACC,GAC7C,IAAQC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,cAEf,OACE,wBACEC,KAAK,cACLC,UAAU,6CACVC,SAAUH,EACVI,MAAM,IAJR,SAMGL,EAAMM,KAAI,SAACC,GAAD,OACT,wBACEF,MAAOL,EAAMQ,QAAQD,GAAQ,EAD/B,SAIGP,EAAMQ,QAAQD,GAAQ,GAFlBA,SCPTE,E,4MACJC,MAAe,CACbC,YAAY,EACZC,cAAe,EACfZ,MAAO,EAAKD,MAAMC,O,EAGpBa,UAAY,WACV,EAAKC,UAAS,SAACC,GAAD,MAAmB,CAC/Bf,MAAO,YAAIe,EAAaf,OAAOgB,UAC/BL,YAAaI,EAAaJ,gB,EAI9BM,OAAS,SAACC,GACR,IAAQC,EAAOD,EAAME,cAAbD,GAEG,aAAPA,GACF,EAAKL,UAAS,SAACC,GAAD,MAAmB,CAC/Bf,MAAO,YAAIe,EAAaf,OAAOqB,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGE,cAAcD,UAI3D,WAAPJ,GACF,EAAKL,UAAS,SAACC,GAAD,MAAmB,CAC/Bf,MAAO,YAAIe,EAAaf,OAAOqB,MAAK,SAACC,EAAIC,GAAL,OAAaD,EAAGG,OAASF,EAAGE,e,EAKtEC,SAAW,SAACC,GACV,IAAQf,EAAkB,EAAKF,MAAvBE,cAER,OAAOe,EAAKF,QAAUb,G,EAGxBX,cAAgB,SAACiB,GACf,IAAMU,EAASV,EAAMU,OAAOvB,MAE5B,EAAKS,SAAS,CACZF,eAAgBgB,K,EAIpBC,MAAQ,WACN,EAAKf,SAAS,CACZH,YAAY,EACZX,MAAO,EAAKD,MAAMC,MAClBY,cAAe,K,4CAInB,WACE,IAAQZ,EAAU8B,KAAKpB,MAAfV,MACF+B,EAAe,YAAI/B,GAAOgC,OAAOF,KAAKJ,UAE5C,OACE,qCACE,iCACE,wBACEO,KAAK,SACL9B,UAAU,4BACV+B,QAASJ,KAAKjB,UAHhB,qBAOA,wBACEoB,KAAK,SACLd,GAAG,WACHhB,UAAU,4BACV+B,QAASJ,KAAKb,OAJhB,iCASA,wBACEgB,KAAK,SACLd,GAAG,SACHhB,UAAU,4BACV+B,QAASJ,KAAKb,OAJhB,4BAQA,wBACEgB,KAAK,SACL9B,UAAU,yBACV+B,QAASJ,KAAKD,MAHhB,sBASF,oBAAI1B,UAAU,aAAd,SACG4B,EAAazB,KAAI,SAACqB,GAAD,OAChB,oBAAexB,UAAU,kBAAzB,SACGwB,GADMA,QAMb,cAAC,EAAD,CACE3B,MAAO8B,KAAK/B,MAAMC,MAClBC,cAAe6B,KAAK7B,uB,GAtGNkC,IAAMC,WA6GfD,MAAME,KAAK5B,GCpHb6B,EAA+B,SAACvC,GAC3C,IAAQwC,EAAWxC,EAAXwC,OAER,OACE,wBACEN,KAAK,SACL9B,UAAU,0CACV+B,QAASK,EAHX,oBCLEC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA8CaC,E,4MArCb/B,MAAQ,CACNV,MAAOwC,EACPE,eAAe,G,EAGjBC,aAAe,WACb,EAAK7B,UAAS,SAAAC,GAAY,MAAK,CAC7B2B,eAAgB3B,EAAa2B,mB,4CAIjC,WACE,MAGIZ,KAAKpB,MAFPV,EADF,EACEA,MACA0C,EAFF,EAEEA,cAGF,OACE,qBAAKvC,UAAU,uDAAf,SACE,gCACE,wCAEEuC,GACA,cAAC,EAAD,CAAaH,OAAQT,KAAKa,eAG3BD,GACC,cAAC,EAAD,CACE1C,MAAOA,a,GA7BHmC,IAAMS,eCpBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9b3b0b05.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: string[];\n  changeHandler: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const GoodsSelected: React.FC<Props> = (props) => {\n  const { goods, changeHandler } = props;\n\n  return (\n    <select\n      name=\"goodsLength\"\n      className=\"btn btn-outline-secondary btn-block col-12\"\n      onChange={changeHandler}\n      value=\"1\"\n    >\n      {goods.map((item: string) => (\n        <option\n          value={goods.indexOf(item) + 1}\n          key={item}\n        >\n          {goods.indexOf(item) + 1}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import React from 'react';\nimport { GoodsSelected } from './GoodsSelected';\n\ntype Props = {\n  goods: string[];\n};\n\ntype State = {\n  isReversed: boolean;\n  limitedLength: number;\n  goods: string[];\n};\n\nclass GoodsList extends React.Component<Props, State> {\n  state: State = {\n    isReversed: false,\n    limitedLength: 1,\n    goods: this.props.goods,\n  };\n\n  onReverse = () => {\n    this.setState((currentState) => ({\n      goods: [...currentState.goods].reverse(),\n      isReversed: !currentState.isReversed,\n    }));\n  };\n\n  onSort = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { id } = event.currentTarget;\n\n    if (id === 'alphabet') {\n      this.setState((currentState) => ({\n        goods: [...currentState.goods].sort((g1, g2) => (g1.localeCompare(g2))),\n      }));\n    }\n\n    if (id === 'length') {\n      this.setState((currentState) => ({\n        goods: [...currentState.goods].sort((g1, g2) => (g1.length - g2.length)),\n      }));\n    }\n  };\n\n  filtered = (good: string) => {\n    const { limitedLength } = this.state;\n\n    return good.length >= limitedLength;\n  };\n\n  changeHandler = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const target = event.target.value;\n\n    this.setState({\n      limitedLength: +target,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      goods: this.props.goods,\n      limitedLength: 1,\n    });\n  };\n\n  render() {\n    const { goods } = this.state;\n    const visibleGoods = [...goods].filter(this.filtered);\n\n    return (\n      <>\n        <span>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-secondary\"\n            onClick={this.onReverse}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            id=\"alphabet\"\n            className=\"btn btn-outline-secondary\"\n            onClick={this.onSort}\n          >\n            Sort Alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            id=\"length\"\n            className=\"btn btn-outline-secondary\"\n            onClick={this.onSort}\n          >\n            Sort by length\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-danger\"\n            onClick={this.reset}\n          >\n            Reset\n          </button>\n        </span>\n\n        <ul className=\"list-group\">\n          {visibleGoods.map((good) => (\n            <li key={good} className=\"list-group-item\">\n              {good}\n            </li>\n          ))}\n        </ul>\n\n        <GoodsSelected\n          goods={this.props.goods}\n          changeHandler={this.changeHandler}\n        />\n      </>\n    );\n  }\n}\n\nexport default React.memo(GoodsList);\n","import React from 'react';\n\ntype Props = {\n  method: () => void;\n};\n\nexport const StartButton: React.FC<Props> = (props) => {\n  const { method } = props;\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-primary btn-lg btn-block col-12\"\n      onClick={method}\n    >\n      Start\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport GoodsList from './components/GoodsList';\nimport { StartButton } from './components/StartButton';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[];\n  isListVisible: boolean;\n};\n\nclass App extends React.PureComponent<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isListVisible: false,\n  };\n\n  renderedList = () => {\n    this.setState(currentState => ({\n      isListVisible: !currentState.isListVisible,\n    }));\n  };\n\n  render() {\n    const {\n      goods,\n      isListVisible,\n    } = this.state;\n\n    return (\n      <div className=\"App d-flex justify-content-center align-items-center\">\n        <div>\n          <h1>Goods</h1>\n\n          {!isListVisible && (\n            <StartButton method={this.renderedList} />\n          )}\n\n          {isListVisible && (\n            <GoodsList\n              goods={goods}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}